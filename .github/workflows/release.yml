name: build

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - name: install build dependencies
        run: |
          sudo apt install build-essential git gfortran liblapack-dev libgsl-dev minpack-dev f2c jhead zlib1g-dev libjpeg62-dev libceres-dev cmake

      - name: clone vlfeat
        run: git clone https://github.com/vlfeat/vlfeat.git

      - name: patch vlfeat
        run: |
          cp src/vlfeat/vl/pgm.patch vlfeat/vl
          cd vlfeat/vl
          patch < pgm.patch

      - name: compile vlfeat
        run: |
          cd vlfeat
          make

      - name: clone bundler
        run: git clone https://github.com/snavely/bundler_sfm.git

      - name: compile bundler
        run: |
          cd bundler_sfm
          sed -i 's/# USE_CERES=true/USE_CERES=true/' src/Makefile
          make

      - name: remove files
        run: |
          cd bundler_sfm/bin
          rm zlib1.dll
          rm ToSift.sh
          rm ToSiftList.sh
          rm extract_focal.pl

      - name: clone cmvs-pmvs
        run: git clone https://github.com/pmoulon/CMVS-PMVS.git

      - name: compile cmvs-pmvs
        run: |
          cd CMVS-PMVS/program
          mkdir build; cd build
          cmake -g "CodeBlocks - Unix Makefiles" ..
          make

      - name: prepare files
        run: |
          cp vlfeat/bin/glnxa64/sift bundler_sfm/bin
          cp vlfeat/bin/glnxa64/libvl.so bundler_sfm/bin
          cp CMVS-PMVS/program/build/main/cmvs bundler_sfm/bin
          cp CMVS-PMVS/program/build/main/pmvs2 bundler_sfm/bin
          cp CMVS-PMVS/program/build/main/genOption bundler_sfm/bin
                  
          mkdir lpt-ubuntu-18.04
          cp -r bundler_sfm/bin lpt-ubuntu-18.04
          cp Makefile lpt-ubuntu-18.04
          cp LICENSE lpt-ubuntu-18.04
          cp vlfeat/COPYING lpt-ubuntu-18.04/bin 

          cd lpt-ubuntu-18.04
          mkdir lib
          mkdir -p examples/ET
          mkdir -p examples/kermit
          mv bin/libANN_char.so lib
          mv bin/libvl.so lib

          cd ..
          cp -r cfg lpt-ubuntu-18.04
          cp -r docs lpt-ubuntu-18.04
          cp -r utils lpt-ubuntu-18.04
          cp bundler_sfm/examples/ET/*.jpg lpt-ubuntu-18.04/examples/ET
          cp bundler_sfm/examples/kermit/*.jpg lpt-ubuntu-18.04/examples/kermit

      - uses: actions/upload-artifact@v1
        with:
          name: lpt-ubuntu-18.04
          path: lpt-ubuntu-18.04

  test:
    runs-on: ubuntu-18.04
    needs: build
    steps:
      - uses: actions/checkout@v2

      - name: install runtime dependencies
        run: sudo apt install build-essential libjpeg62 liblapack3 libceres1 jhead python3 python3-pil python3-ruamel.yaml

      - uses: actions/download-artifact@v1
        with:
          name: lpt-ubuntu-18.04

      - name: run example
        run: |
          chmod -R u+x lpt-ubuntu-18.04/bin
          cd lpt-ubuntu-18.04
          make

      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: log.txt
          path: lpt-ubuntu-18.04/work_dir/log.txt

      - uses: actions/upload-artifact@v1
        if: success()
        with:
          name: option-0000.ply
          path: lpt-ubuntu-18.04/work_dir/pmvs/models/option-0000.ply      

  release:
    runs-on: ubuntu-18.04
    needs: test
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v1
        with:
          name: lpt-ubuntu-18.04

      - name: tar
        run: |
          chmod -R u+x lpt-ubuntu-18.04/bin
          tar -zcvf lpt-ubuntu-18.04.tar.gz lpt-ubuntu-18.04

      - name: release
        uses: AButler/upload-release-assets@v2.0
        with:
          files: "*.tar.gz"
          release-tag: "latest"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
